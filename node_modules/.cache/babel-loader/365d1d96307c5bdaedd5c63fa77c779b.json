{"ast":null,"code":"export var Difficulty;//components/resultProps\n(function(Difficulty){Difficulty[\"Easy\"]=\"easy\";Difficulty[\"Medium\"]=\"medium\";Difficulty[\"Hard\"]=\"hard\";})(Difficulty||(Difficulty={}));","map":{"version":3,"sources":["E:/Bilal/Bootcamp2020/quiz-app/src/Types/types.ts"],"names":["Difficulty"],"mappings":"AAuDA,UAAYA,CAAAA,UAAZ,CAMA;UANYA,U,EAAAA,U,gBAAAA,U,oBAAAA,U,mBAAAA,U,GAAAA,U","sourcesContent":["import React from \"react\";\r\n\r\nexport type QuizContentTypes = {\r\n    category: string,\r\n    correct_answer: string,\r\n    difficulty: string,\r\n    incorrect_answers: string[],\r\n    question: string,\r\n    type: string,\r\n}\r\n\r\nexport type QuizTypes = {\r\n    question: string,\r\n    answer: string,\r\n    options: string[],\r\n}\r\n\r\nexport type QuestionPropsTypes = {\r\n    question: string,\r\n    options: string[],\r\n    answer: string,\r\n    username: string;\r\n    fetchNumberOfQuestiuons: number,\r\n    TotalScore: React.Dispatch<React.SetStateAction<number>>;\r\n    score: number;\r\n    QuestionsCountProps: {\r\n        questionCount: number;\r\n        setQuestionCount: React.Dispatch<React.SetStateAction<number>>;\r\n    };\r\n    callback: (e: React.FormEvent<EventTarget>) => void,\r\n}\r\n\r\nexport type SettingsTypes = {\r\n    UserName: string,\r\n    numberOfQuestions: number,\r\n    difficulty: string,\r\n    category: number,\r\n    categoryName: string,\r\n}\r\n\r\nexport type SettingsPropsTypes = {\r\n    setSettings: React.Dispatch<React.SetStateAction<SettingsTypes>>,\r\n    setRequest: React.Dispatch<React.SetStateAction<boolean>>,\r\n}\r\n\r\nexport type SettingsErrorTypes = {\r\n    userName: string,\r\n    questionNumbers: string;\r\n}\r\n\r\nexport type CategoriesTpes = {\r\n    id:number;\r\n    name: string,\r\n}\r\n\r\nexport enum Difficulty {\r\n    Easy = \"easy\",\r\n    Medium = \"medium\",\r\n    Hard = \"hard\",\r\n}\r\n\r\n//components/resultProps\r\nexport type ResultPropsTypes = {\r\n    username: string;\r\n    totalScore: number;\r\n    numberOfQuestions: number;\r\n    category: string;\r\n    difficulty: string;\r\n    callback: () => void;\r\n};\r\n  \r\n//components/result State\r\nexport type ResultStateTypes = [\r\n    { name: string; value: string },\r\n    { name: string; value: number },\r\n    { name: string; value: string },\r\n    { name: string; value: string },\r\n    { name: string; value: number }\r\n];\r\n"]},"metadata":{},"sourceType":"module"}