{"ast":null,"code":"import _objectSpread from\"E:/Bilal/Bootcamp2020/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"E:/Bilal/Bootcamp2020/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/Bilal/Bootcamp2020/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/Bilal/Bootcamp2020/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"E:/Bilal/Bootcamp2020/quiz-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useState,useEffect}from'react';// Types\nimport{Difficulty}from'./../Types/types';// Service\nimport{Categories}from'./../Services/services';// mui\nimport{makeStyles}from'@material-ui/core/styles';import{InputLabel,FormControl,Select,TextField,Box,Typography,NativeSelect,Button,CircularProgress}from'@material-ui/core';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyle=makeStyles(function(theme){var _form;return{root:{height:\"100vh\",width:\"100%\",display:\"flex\",justifyItems:\"center\",alignItems:\"center\"},loader:{position:\"absolute\",left:\"50%\",top:\"50%\",transform:\"translte(-50%,-50%)\"},settingHeader:{background:theme.palette.primary.main,color:\"white\",borderRadius:\"0.5rem\"},form:(_form={width:\"90%\",boxShadow:\"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",margin:\"0 auto\",background:\"white\",borderRadius:\"0.5rem\"},_defineProperty(_form,theme.breakpoints.up(\"sm\"),{width:\"60%\"}),_defineProperty(_form,theme.breakpoints.up(\"md\"),{width:\"50%\"}),_defineProperty(_form,theme.breakpoints.up(\"lg\"),{width:\"30%\"}),_form),inputFields:{width:\"100%\",marginTop:\"20px\"}};});var Settings=function Settings(_ref){var setSettings=_ref.setSettings,setRequest=_ref.setRequest;var classes=useStyle();// Setting States\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),categories=_useState2[0],setCategories=_useState2[1];var _useState3=useState({userName:\"\",questionNumbers:\"\"}),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState({UserName:\"\",numberOfQuestions:5,difficulty:\"easy\",category:9,categoryName:\"General Knowledge\"}),_useState6=_slicedToArray(_useState5,2),newSettings=_useState6[0],setNewSettings=_useState6[1];//useEffect to get data of Categories\n// useEffect(() => {\n//     const fetchCategories = async () => {\n//         const fetchedCategories = await Categories();\n//         setCategories(fetchedCategories);\n//     };\n//     fetchCategories();\n// }, []);\n// useEffect for fetching categories and setting them to categories state\nuseEffect(function(){var fetchCategories=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var fetchedCategories;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Categories();case 2:fetchedCategories=_context.sent;setCategories(fetchedCategories);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchCategories(){return _ref2.apply(this,arguments);};}();fetchCategories();},[]);// setting Loader if categories not loaded\nif(!categories.length){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CircularProgress,{color:\"secondary\",className:classes.loader})});}// creating handler for submiting the user information and validation for user form and sending request for the quiz\nvar submitHandler=function submitHandler(e){e.preventDefault();setSettings(userInfo);if(newSettings.UserName===\"\"){setError(_objectSpread(_objectSpread({},error),{},{userName:String(\"User name is required\")}));}else if(newSettings.numberOfQuestions<=3||newSettings.numberOfQuestions>=50){setError(_objectSpread(_objectSpread({},error),{},{questionNumbers:String(\"Number of Questions must be between 3 to 50\")}));}else{setRequest(true);}};// filtering out the specific category\nvar userCategory=categories.filter(function(category){return category.id===newSettings.category;});// console.log(userCategory[0].name, \"5687/987\");\n// setting user information state\nvar userInfo={UserName:newSettings.UserName,numberOfQuestions:newSettings.numberOfQuestions,difficulty:newSettings.difficulty,category:newSettings.category,categoryName:userCategory[0].name};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(\"form\",{className:classes.form,onSubmit:submitHandler,children:/*#__PURE__*/_jsxs(Box,{py:3,px:4,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.settingHeader,children:/*#__PURE__*/_jsx(Box,{py:2,px:1,children:/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",children:\"Settings\"})})}),/*#__PURE__*/_jsx(TextField,{error:error.userName===\"\"?false:true,helperText:error.userName===\"\"?\"\":error.userName,id:\"standard-basic\",label:\"Your Name\",type:\"text\",value:newSettings.UserName,onChange:function onChange(e){setNewSettings(_objectSpread(_objectSpread({},newSettings),{},{UserName:String(e.target.value)}));setError(_objectSpread(_objectSpread({},error),{},{userName:\"\"}));},className:classes.inputFields}),/*#__PURE__*/_jsx(TextField,{error:error.questionNumbers===\"\"?false:true,helperText:error.questionNumbers===\"\"?\"\":error.questionNumbers,id:\"standard-basic\",label:\"Select Number of Questions\",type:\"number\",value:newSettings.numberOfQuestions===0?\"\":newSettings.numberOfQuestions,onChange:function onChange(e){setNewSettings(_objectSpread(_objectSpread({},newSettings),{},{numberOfQuestions:Number(e.target.value)}));setError(_objectSpread(_objectSpread({},error),{},{questionNumbers:\"\"}));},className:classes.inputFields}),/*#__PURE__*/_jsxs(FormControl,{className:classes.inputFields,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"grouped-native-select\",children:\"Select Difficulty\"}),/*#__PURE__*/_jsxs(Select,{native:true,id:\"grouped-native-select\",onChange:function onChange(e){setNewSettings(_objectSpread(_objectSpread({},newSettings),{},{difficulty:String(e.target.value)}));},children:[/*#__PURE__*/_jsx(\"option\",{value:Difficulty.Easy,children:\"Easy\"}),/*#__PURE__*/_jsx(\"option\",{value:Difficulty.Medium,children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:Difficulty.Hard,children:\"Hard\"})]})]}),/*#__PURE__*/_jsxs(FormControl,{className:classes.inputFields,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"grouped-native-select\",children:\"Select Category\"}),/*#__PURE__*/_jsx(NativeSelect,{id:\"grouped-native-select\",defaultValue:\"\",onChange:function onChange(e){setNewSettings(_objectSpread(_objectSpread({},newSettings),{},{category:Number(e.target.value)}));},children:categories.map(function(category){return/*#__PURE__*/_jsx(\"option\",{value:category.id,children:category.name},category.id);})})]}),/*#__PURE__*/_jsx(Box,{pt:4,pb:1,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",type:\"submit\",children:\"Start Quiz\"})})]})})})});};export default Settings;","map":{"version":3,"sources":["E:/Bilal/Bootcamp2020/quiz-app/src/Components/Settings.tsx"],"names":["React","useState","useEffect","Difficulty","Categories","makeStyles","InputLabel","FormControl","Select","TextField","Box","Typography","NativeSelect","Button","CircularProgress","useStyle","theme","root","height","width","display","justifyItems","alignItems","loader","position","left","top","transform","settingHeader","background","palette","primary","main","color","borderRadius","form","boxShadow","margin","breakpoints","up","inputFields","marginTop","Settings","setSettings","setRequest","classes","categories","setCategories","userName","questionNumbers","error","setError","UserName","numberOfQuestions","difficulty","category","categoryName","newSettings","setNewSettings","fetchCategories","fetchedCategories","length","submitHandler","e","preventDefault","userInfo","String","userCategory","filter","id","name","target","value","Number","Easy","Medium","Hard","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// Types\r\nimport { SettingsPropsTypes, SettingsTypes, SettingsErrorTypes, CategoriesTpes, Difficulty } from './../Types/types';\r\n// Service\r\nimport { Categories } from './../Services/services';\r\n// mui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    InputLabel,\r\n    FormControl,\r\n    Select,\r\n    TextField,\r\n    Box,\r\n    Typography,\r\n    NativeSelect,\r\n    Button,\r\n    CircularProgress\r\n} from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyItems: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    loader: {\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translte(-50%,-50%)\",\r\n    },\r\n    settingHeader: {\r\n        background: theme.palette.primary.main,\r\n        color: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n    },\r\n    form: {\r\n        width: \"90%\",\r\n        boxShadow:\r\n            \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\r\n        margin: \"0 auto\",\r\n        background: \"white\",\r\n        borderRadius: \"0.5rem\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: \"60%\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \"50%\",\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            width: \"30%\",\r\n        },\r\n    },\r\n    inputFields: {\r\n        width: \"100%\",\r\n        marginTop: \"20px\",\r\n    },\r\n}));\r\n\r\nconst Settings: React.FC<SettingsPropsTypes> = ({ setSettings, setRequest }) => {\r\n\r\n    const classes = useStyle();\r\n \r\n    // Setting States\r\n    const [categories, setCategories] = useState<CategoriesTpes[]>([]);\r\n    const [error, setError] = useState<SettingsErrorTypes>({\r\n        userName: \"\",\r\n        questionNumbers: \"\"\r\n    });\r\n    const [newSettings, setNewSettings] = useState<SettingsTypes>({\r\n        UserName: \"\",\r\n        numberOfQuestions: 5,\r\n        difficulty: \"easy\",\r\n        category: 9,\r\n        categoryName: \"General Knowledge\",\r\n    })\r\n\r\n    //useEffect to get data of Categories\r\n    // useEffect(() => {\r\n    //     const fetchCategories = async () => {\r\n    //         const fetchedCategories = await Categories();\r\n    //         setCategories(fetchedCategories);\r\n    //     };\r\n    //     fetchCategories();\r\n    // }, []);\r\n\r\n    // useEffect for fetching categories and setting them to categories state\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            const fetchedCategories = await Categories();\r\n            setCategories(fetchedCategories);\r\n        }\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    // setting Loader if categories not loaded\r\n    if (!categories.length) {\r\n        return (\r\n            <div>\r\n                <CircularProgress color=\"secondary\" className={classes.loader} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // creating handler for submiting the user information and validation for user form and sending request for the quiz\r\n    const submitHandler = (e: React.FormEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n        setSettings(userInfo);\r\n        \r\n        if (newSettings.UserName === \"\") {\r\n            setError({\r\n                ...error,\r\n                userName: String(\"User name is required\"),\r\n            });\r\n        } else if (newSettings.numberOfQuestions <= 3 || newSettings.numberOfQuestions >= 50) {\r\n            setError({\r\n                ...error,\r\n                questionNumbers: String(\"Number of Questions must be between 3 to 50\"),\r\n            })\r\n        } else {\r\n            setRequest(true);\r\n        }\r\n        \r\n    }\r\n\r\n    // filtering out the specific category\r\n    let userCategory = categories.filter((category) => {\r\n        return category.id === newSettings.category\r\n    });\r\n\r\n    // console.log(userCategory[0].name, \"5687/987\");\r\n\r\n    // setting user information state\r\n    const userInfo: SettingsTypes = {\r\n        UserName: newSettings.UserName,\r\n        numberOfQuestions: newSettings.numberOfQuestions,\r\n        difficulty: newSettings.difficulty,\r\n        category: newSettings.category,\r\n        categoryName: userCategory[0].name,\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <form className={classes.form} onSubmit={submitHandler}>\r\n                    <Box py={3} px={4}>\r\n                        <div className={classes.settingHeader}>\r\n                            <Box py={2} px={1}>\r\n                                <Typography variant=\"h4\" align=\"center\">\r\n                                    Settings\r\n                        </Typography>\r\n                            </Box>\r\n                        </div>\r\n                        <TextField\r\n                            error={error.userName === \"\" ? false : true}\r\n                            helperText={error.userName === \"\" ? \"\" : error.userName}\r\n                            id=\"standard-basic\"\r\n                            label=\"Your Name\"\r\n                            type=\"text\"\r\n                            value={\r\n                                newSettings.UserName\r\n                            }\r\n                            onChange={(e) => {\r\n                                setNewSettings({\r\n                                    ...newSettings,\r\n                                    UserName: String(e.target.value),\r\n                                });\r\n                                setError({\r\n                                    ...error,\r\n                                    userName: \"\",\r\n                                });\r\n                            }}\r\n                            className={classes.inputFields}\r\n                        />\r\n                        <TextField\r\n                            error={error.questionNumbers === \"\" ? false : true}\r\n                            helperText={error.questionNumbers === \"\" ? \"\" : error.questionNumbers}\r\n                            id=\"standard-basic\"\r\n                            label=\"Select Number of Questions\"\r\n                            type=\"number\"\r\n                            value={\r\n                                newSettings.numberOfQuestions === 0 ? \"\" : newSettings.numberOfQuestions\r\n                            }\r\n                            onChange={(e) => {\r\n                                setNewSettings({\r\n                                    ...newSettings,\r\n                                    numberOfQuestions: Number(e.target.value),\r\n                                });\r\n                                setError({\r\n                                    ...error,\r\n                                    questionNumbers: \"\",\r\n                                });\r\n                            }}\r\n                            className={classes.inputFields}\r\n                        />\r\n                        <FormControl className={classes.inputFields}>\r\n                            <InputLabel htmlFor=\"grouped-native-select\">\r\n                                Select Difficulty\r\n                            </InputLabel>\r\n                            <Select native id=\"grouped-native-select\" onChange={(e) => {\r\n                                setNewSettings({ ...newSettings, difficulty: String(e.target.value) })\r\n                            }}>\r\n                                <option value={Difficulty.Easy}>Easy</option>\r\n                                <option value={Difficulty.Medium}>Medium</option>\r\n                                <option value={Difficulty.Hard}>Hard</option>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl className={classes.inputFields}>\r\n                            <InputLabel htmlFor=\"grouped-native-select\">\r\n                                Select Category\r\n                            </InputLabel>\r\n                            <NativeSelect id=\"grouped-native-select\" defaultValue=\"\"\r\n                                onChange={(e) => {\r\n                                    setNewSettings({ ...newSettings, category: Number(e.target.value) })\r\n                                }}>\r\n                                {categories.map((category: CategoriesTpes) => (\r\n                                    <option key={category.id} value={category.id}>\r\n                                        {category.name}\r\n                                    </option>\r\n                                ))}\r\n                            </NativeSelect>\r\n                        </FormControl>\r\n                        <Box pt={4} pb={1}>\r\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                                Start Quiz\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}